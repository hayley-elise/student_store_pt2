{"ast":null,"code":"/**\r\n * Function that removes an item from the shopping cart\r\n *\r\n * @param {Item} item - the item to remove\r\n * @return {Cart}\r\n */\nexport const removeFromCart = (cart, item) => {\n  const newCart = { ...cart,\n    [item.id]: cart[item.id] - 1\n  };\n\n  if (newCart[item.id] <= 0) {\n    delete newCart[item.id];\n  }\n\n  return newCart;\n};\n/**\r\n * Function that adds an item to the cart and then returns the cart\r\n *\r\n * @param {Item} item - the item to add\r\n * @return {Cart}\r\n */\n\nexport const addToCart = (cart, item) => {\n  if (cart.hasOwnProperty(item.id)) {\n    return { ...cart,\n      [item.id]: cart[item.id] + 1\n    };\n  }\n\n  return { ...cart,\n    [item.id]: 1\n  };\n};\n/**\r\n * Function that determines the number of items currently in the cart for a particular item\r\n *\r\n * @param {Item} item - the item in question\r\n * @return {Number}\r\n */\n\nexport const getQuantityOfItemInCart = (cart, item) => {\n  return cart[item.id] || 0;\n};\nexport const getTotalItemsInCart = cart => {\n  const ids = Object.keys(cart);\n  if (!(ids !== null && ids !== void 0 && ids.length)) return 0;\n  return ids.reduce((acc, id) => {\n    return acc + cart[id];\n  }, 0);\n};","map":{"version":3,"names":["removeFromCart","cart","item","newCart","id","addToCart","hasOwnProperty","getQuantityOfItemInCart","getTotalItemsInCart","ids","Object","keys","length","reduce","acc"],"sources":["C:/Users/simmo/OneDrive/Documents/GitHub/student_store_pt2/student-store-ui/src/utils/cart.js"],"sourcesContent":["/**\r\n * Function that removes an item from the shopping cart\r\n *\r\n * @param {Item} item - the item to remove\r\n * @return {Cart}\r\n */\r\nexport const removeFromCart = (cart, item) => {\r\n  const newCart = {\r\n    ...cart,\r\n    [item.id]: cart[item.id] - 1,\r\n  }\r\n\r\n  if (newCart[item.id] <= 0) {\r\n    delete newCart[item.id]\r\n  }\r\n\r\n  return newCart\r\n}\r\n\r\n/**\r\n * Function that adds an item to the cart and then returns the cart\r\n *\r\n * @param {Item} item - the item to add\r\n * @return {Cart}\r\n */\r\nexport const addToCart = (cart, item) => {\r\n  if (cart.hasOwnProperty(item.id)) {\r\n    return {\r\n      ...cart,\r\n      [item.id]: cart[item.id] + 1,\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...cart,\r\n    [item.id]: 1,\r\n  }\r\n}\r\n\r\n/**\r\n * Function that determines the number of items currently in the cart for a particular item\r\n *\r\n * @param {Item} item - the item in question\r\n * @return {Number}\r\n */\r\nexport const getQuantityOfItemInCart = (cart, item) => {\r\n  return cart[item.id] || 0\r\n}\r\n\r\nexport const getTotalItemsInCart = (cart) => {\r\n  const ids = Object.keys(cart)\r\n  if (!ids?.length) return 0\r\n\r\n  return ids.reduce((acc, id) => {\r\n    return acc + cart[id]\r\n  }, 0)\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;EAC5C,MAAMC,OAAO,GAAG,EACd,GAAGF,IADW;IAEd,CAACC,IAAI,CAACE,EAAN,GAAWH,IAAI,CAACC,IAAI,CAACE,EAAN,CAAJ,GAAgB;EAFb,CAAhB;;EAKA,IAAID,OAAO,CAACD,IAAI,CAACE,EAAN,CAAP,IAAoB,CAAxB,EAA2B;IACzB,OAAOD,OAAO,CAACD,IAAI,CAACE,EAAN,CAAd;EACD;;EAED,OAAOD,OAAP;AACD,CAXM;AAaP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAME,SAAS,GAAG,CAACJ,IAAD,EAAOC,IAAP,KAAgB;EACvC,IAAID,IAAI,CAACK,cAAL,CAAoBJ,IAAI,CAACE,EAAzB,CAAJ,EAAkC;IAChC,OAAO,EACL,GAAGH,IADE;MAEL,CAACC,IAAI,CAACE,EAAN,GAAWH,IAAI,CAACC,IAAI,CAACE,EAAN,CAAJ,GAAgB;IAFtB,CAAP;EAID;;EAED,OAAO,EACL,GAAGH,IADE;IAEL,CAACC,IAAI,CAACE,EAAN,GAAW;EAFN,CAAP;AAID,CAZM;AAcP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,uBAAuB,GAAG,CAACN,IAAD,EAAOC,IAAP,KAAgB;EACrD,OAAOD,IAAI,CAACC,IAAI,CAACE,EAAN,CAAJ,IAAiB,CAAxB;AACD,CAFM;AAIP,OAAO,MAAMI,mBAAmB,GAAIP,IAAD,IAAU;EAC3C,MAAMQ,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYV,IAAZ,CAAZ;EACA,IAAI,EAACQ,GAAD,aAACA,GAAD,eAACA,GAAG,CAAEG,MAAN,CAAJ,EAAkB,OAAO,CAAP;EAElB,OAAOH,GAAG,CAACI,MAAJ,CAAW,CAACC,GAAD,EAAMV,EAAN,KAAa;IAC7B,OAAOU,GAAG,GAAGb,IAAI,CAACG,EAAD,CAAjB;EACD,CAFM,EAEJ,CAFI,CAAP;AAGD,CAPM"},"metadata":{},"sourceType":"module"}